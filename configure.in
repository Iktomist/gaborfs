# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.50)
AC_INIT(include/reiserfs/reiserfs.h)
AC_CANONICAL_HOST
AC_CANONICAL_SYSTEM

dnl Versioning
dnl Making releases:
dnl    LIBREISERFS_MICRO_VERSION += 1;
dnl    LIBREISERFS_INTERFACE_AGE += 1;
dnl    LIBREISERFS_BINARY_AGE += 1;
dnl if any functions have been added, set LIBREISERFS_INTERFACE_AGE to 0.
dnl if backwards compatibility has been broken (eg. functions removed,
dnl function signatures changed),
dnl set LIBREISERFS_BINARY_AGE _and_ LIBREISERFS_INTERFACE_AGE to 0.
LIBREISERFS_MAJOR_VERSION=0
LIBREISERFS_MINOR_VERSION=3
LIBREISERFS_MICRO_VERSION=1

LIBREISERFS_INTERFACE_AGE=1
LIBREISERFS_BINARY_AGE=1
LIBREISERFS_VERSION=$LIBREISERFS_MAJOR_VERSION.$LIBREISERFS_MINOR_VERSION.$LIBREISERFS_MICRO_VERSION

LT_RELEASE=$LIBREISERFS_MAJOR_VERSION.$LIBREISERFS_MINOR_VERSION

dnl The most recent interface number that this library implements
LT_CURRENT=`expr $LIBREISERFS_MICRO_VERSION - $LIBREISERFS_INTERFACE_AGE`

dnl The implementation number of the *current* interface
LT_REVISION=$LIBREISERFS_INTERFACE_AGE

dnl The difference between the newest and oldest interfaces that this library implements.
dnl In other words, the library implements all the interface numbers in the range from
dnl number *current age* to *current*
LT_AGE=`expr $LIBREISERFS_BINARY_AGE - $LIBREISERFS_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

PACKAGE=progsreiserfs
VERSION=$LIBREISERFS_VERSION

AM_INIT_AUTOMAKE($PACKAGE, $VERSION-rc8)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(LIBREISERFS_MAX_INTERFACE_VERSION, $LIBREISERFS_BINARY_AGE)
AC_DEFINE_UNQUOTED(LIBREISERFS_MIN_INTERFACE_VERSION, $LIBREISERFS_INTERFACE_AGE)

AC_ARG_ENABLE(Werror,
    [  --enable-Werror  compile with -Werror option [default=yes]], ,
    enable_Werror=yes
)

AC_ARG_ENABLE(debug,
    [  --enable-debug  compile in assertions [default=yes]], ,
    enable_debug=yes
)
if test x$enable_debug = xyes; then
    AC_DEFINE(DEBUG)
fi

AC_ARG_ENABLE(all-static,
    [  --enable-all-static     build static binaries [default=no]], ,
    enable_all_static=no
)
if test x$enable_all_static = xyes; then
    PROGS_LDFLAGS=-all-static
    enable_static=yes
fi

AC_ARG_ENABLE(part-static,
    [  --enable-part-static    build partially static binaries [default=no]], ,
    enable_part_static=no
)
if test x$enable_part_static = xyes; then
    PROGS_LDFLAGS="-Wl,-lc,-static -static"
    enable_static=yes
fi
AC_SUBST(PROGS_LDFLAGS)

dnl make libc threadsafe (not required for us, but useful other users of
dnl libreiserfs)
CFLAGS="$CFLAGS -D_REENTRANT"

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

AC_SYS_LARGEFILE
CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=${ac_cv_sys_file_offset_bits}"
AC_CHECK_SIZEOF(off_t, 64, [
	#include <stdio.h>
	#include <sys/types.h>
	#include <unistd.h>
])

AM_ENABLE_SHARED
AM_PROG_LIBTOOL

dnl Initialize i18n:
ALL_LINGUAS=""
AM_GNU_GETTEXT
CFLAGS="$CFLAGS -DLOCALEDIR=\"\\\"$datadir/locale\\\"\""

dnl One day, gettext might support libtool...
if test "$USE_INCLUDED_LIBINTL" = "yes"; then
    INTLINCS='-I$(top_srcdir)/intl'
fi
AC_SUBST(INTLINCS)

dnl Check for libuuid
UUID_LIBS=""
AC_CHECK_LIB(uuid, uuid_generate, UUID_LIBS="-luuid", )
AC_SUBST(UUID_LIBS)

if test x$UUID_LIBS != x; then
    AC_DEFINE(HAVE_UUID)
fi

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([alloca.h argz.h errno.h fcntl.h langinfo.h libintl.h limits.h locale.h malloc.h stddef.h stdlib.h string.h strings.h sys/param.h unistd.h])

if test x$USE_NLS = xyes; then
    AC_CHECK_HEADERS(wctype.h, ,
	AC_MSG_ERROR(
One or more of the header files that are required for
native language support (wctype.h) could not be found.  Either get a newer
version of GNU libc and its headers - which can be obtained from:
	ftp.gnu.org/gnu/glibc
Or disable native language support with the --disable-nls option
)
    exit
    )
fi

dnl Checks for typedefs, structures and compiler characteristics.
AC_C_BIGENDIAN

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_FUNC_MMAP
AC_CHECK_FUNCS([__argz_count __argz_next __argz_stringify dcgettext getcwd getwd memmove mempcpy memset munmap nl_langinfo setlocale stpcpy strcasecmp strchr strcspn strdup strstr strtoul strsep getopt_long_only])

if test x$enable_debug = xyes; then
    CFLAGS="$CFLAGS -g"
fi

CFLAGS="$CFLAGS -W -Wall -Wno-unused -Wno-switch -Wno-format"
if test x$enable_Werror = xyes; then
    CFLAGS="$CFLAGS -Werror"
fi

case "$host" in
    *freebsd*)
	AC_DEFINE(__freebsd__, 1)
    ;;
esac

AC_OUTPUT([
    Makefile
    include/Makefile
    include/dal/Makefile
    include/reiserfs/Makefile
    libdal/Makefile
    libreiserfs/Makefile
    progsreiserfs/Makefile
    progsreiserfs/libmisc/Makefile
    progsreiserfs/mkfs/Makefile
    progsreiserfs/cpfs/Makefile
    progsreiserfs/resizefs/Makefile
    progsreiserfs/tunefs/Makefile
    progsreiserfs/fsck/Makefile
    demos/Makefile
    debug/Makefile
    debug/test
    doc/Makefile
    po/Makefile.in
    intl/Makefile
    progsreiserfs.spec
])

test -f ./debug/test && chmod +x ./debug/test

echo
echo Type \'make\' to compile progsreiserfs
